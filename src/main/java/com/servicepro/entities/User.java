package com.servicepro.entities;
// Generated Nov 6, 2020, 2:05:45 AM by Hibernate Tools 4.3.5.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

import com.fasterxml.jackson.annotation.*;

/**
 * User generated by hbm2java
 */
@JsonIgnoreProperties(ignoreUnknown = true)
@Entity
@Table(name = "user", catalog = "servicebyprodb", uniqueConstraints = { @UniqueConstraint(columnNames = "phone"),
		@UniqueConstraint(columnNames = "email") })
public class User implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 6471926863347515194L;
	private Integer idUser;
	private Address address;
	private String firstName;
	private String lastName;
	private String phone;
	private String email;
	private String role;
	//@Column
	//@ColumnTransformer(forColumn="password" , write ="AES_ENCRYPT(?, 'clefsecrete')" , read ="AES_DECRYPT(password, 'clefsecrete')")
	@JsonIgnore
	private String password;
	private String avatar;
	@JsonFormat(pattern="yyyy-MM-dd'T'HH:mm:ss")
	private Date joinDate;
	private byte accountActivation;
	private String aboutMe;
	private String identityImage;
	private byte isActive;
	@JsonIgnore
	private byte[] salt;
	@JsonIgnore
	private Set<Work> works = new HashSet<Work>(0);
	@JsonIgnore
	private Set<Application> applications = new HashSet<Application>(0);
	private Set<Service> services = new HashSet<Service>(0);
	//@JsonManagedReference(value="review-user")
	//@JsonIgnoreProperties({"work", "user"})
	@JsonIgnore
	private Set<Review> reviews = new HashSet<Review>(0);

	public User() {
	}

	public User(Address address, String firstName, String lastName, String phone, String email, String role,
			String password, byte accountActivation, String identityImage, byte isActive, byte[] salt) {
		this.address = address;
		this.firstName = firstName;
		this.lastName = lastName;
		this.phone = phone;
		this.email = email;
		this.role = role;
		this.password = password;
		this.accountActivation = accountActivation;
		this.identityImage = identityImage;
		this.isActive = isActive;
		this.salt = salt;
	}

	public User(Address address, String firstName, String lastName, String phone, String email, String role,
			String password, byte accountActivation, String identityImage, byte isActive) {
		this.address = address;
		this.firstName = firstName;
		this.lastName = lastName;
		this.phone = phone;
		this.email = email;
		this.role = role;
		this.password = password;
		this.accountActivation = accountActivation;
		this.identityImage = identityImage;
		this.isActive = isActive;
	}
	
	public User(Address address, String firstName, String lastName, String phone, String email, String role,
			String password, String avatar, Date joinDate, byte accountActivation, String aboutMe, String identityImage,
			byte isActive, byte[] salt, Set<Work> works, Set<Application> applications, Set<Service> services,
			Set<Review> reviews) {
		this.address = address;
		this.firstName = firstName;
		this.lastName = lastName;
		this.phone = phone;
		this.email = email;
		this.role = role;
		this.password = password;
		this.avatar = avatar;
		this.joinDate = joinDate;
		this.accountActivation = accountActivation;
		this.aboutMe = aboutMe;
		this.identityImage = identityImage;
		this.isActive = isActive;
		this.salt = salt;
		this.works = works;
		this.applications = applications;
		this.services = services;
		this.reviews = reviews;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id_user", unique = true, nullable = false)
	public Integer getIdUser() {
		return this.idUser;
	}

	public void setIdUser(Integer idUser) {
		this.idUser = idUser;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "address", nullable = false)
	public Address getAddress() {
		return this.address;
	}

	public void setAddress(Address address) {
		this.address = address;
	}

	@Column(name = "first_name", nullable = false, length = 100)
	public String getFirstName() {
		return this.firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	@Column(name = "last_name", nullable = false, length = 100)
	public String getLastName() {
		return this.lastName;
	}

	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

	@Column(name = "phone", unique = true, nullable = false, length = 100)
	public String getPhone() {
		return this.phone;
	}

	public void setPhone(String phone) {
		this.phone = phone;
	}

	@Column(name = "email", unique = true, nullable = false, length = 100)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "role", nullable = false, length = 20)
	public String getRole() {
		return this.role;
	}

	public void setRole(String role) {
		this.role = role;
	}
	@JsonIgnore
	@Column(name = "password", nullable = false, length = 60)
	public String getPassword() {
		return this.password;
	}
	@JsonProperty
	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "avatar", length = 100)
	public String getAvatar() {
		return this.avatar;
	}

	public void setAvatar(String avatar) {
		this.avatar = avatar;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "join_date", length = 19)
	public Date getJoinDate() {
		return this.joinDate;
	}

	public void setJoinDate(Date joinDate) {
		this.joinDate = joinDate;
	}

	@Column(name = "account_activation", nullable = false)
	public byte getAccountActivation() {
		return this.accountActivation;
	}

	public void setAccountActivation(byte accountActivation) {
		this.accountActivation = accountActivation;
	}

	@Column(name = "about_me")
	public String getAboutMe() {
		return this.aboutMe;
	}

	public void setAboutMe(String aboutMe) {
		this.aboutMe = aboutMe;
	}

	@Column(name = "identity_image", nullable = false)
	public String getIdentityImage() {
		return this.identityImage;
	}

	public void setIdentityImage(String identityImage) {
		this.identityImage = identityImage;
	}

	@Column(name = "is_active", nullable = false)
	public byte getIsActive() {
		return this.isActive;
	}

	public void setIsActive(byte isActive) {
		this.isActive = isActive;
	}
	@JsonIgnore
	@Column(name = "salt", nullable = false)
	public byte[] getSalt() {
		return this.salt;
	}
	@JsonIgnore
	public void setSalt(byte[] salt) {
		this.salt = salt;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "user")
	public Set<Work> getWorks() {
		return this.works;
	}

	public void setWorks(Set<Work> works) {
		this.works = works;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "user")
	public Set<Application> getApplications() {
		return this.applications;
	}

	public void setApplications(Set<Application> applications) {
		this.applications = applications;
	}

	@ManyToMany(fetch = FetchType.EAGER)
	@JoinTable(name = "services_artisan", catalog = "servicebyprodb", joinColumns = {
			@JoinColumn(name = "id_artisan", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "id_service", nullable = false, updatable = false) })
	public Set<Service> getServices() {
		return this.services;
	}

	public void setServices(Set<Service> services) {
		this.services = services;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "user")
	public Set<Review> getReviews() {
		return this.reviews;
	}

	public void setReviews(Set<Review> reviews) {
		this.reviews = reviews;
	}

}
